drop view Proj_Previous_Employee_view ;
drop view Proj_Employee_view ;
drop view Proj_Project_Employee_view ;
drop view Proj_Manager_view ;
drop view Proj_Interim_Manager_view ;
drop view Proj_President_view ;
drop view Proj_Current_Project_view ;
drop view Proj_Previous_Project_view ;

create view Proj_Previous_Employee_view as
SELECT
	person_id,
	type,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	Proj_Person_person_id,
	Proj_Person_person_id2,
	is_fired,
	salary
FROM Proj_Person where type = 'Previous Employee' ;

create or replace TRIGGER Proj_Previous_Employee_trigger
	 INSTEAD OF insert ON Proj_Previous_Employee_view
	 FOR EACH ROW
BEGIN
	insert into Proj_Person (
	person_id,
	type,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	Proj_Person_person_id,
	Proj_Person_person_id2,
	is_fired,
	salary)
	 VALUES (
	:NEW.person_id,
	'Previous Employee',
	:NEW.first_name,
	:NEW.last_name,
	:NEW.home_address,
	:NEW.zipcode,
	:NEW.home_phone,
	:NEW.us_citizen,
	:NEW.Proj_Person_person_id,
	:NEW.Proj_Person_person_id2,
	:NEW.is_fired,
	:NEW.salary) ;
END;
/

create view Proj_Employee_view as
SELECT
	person_id,
	type,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	Proj_Person_person_id,
	Proj_Person_person_id2,
	employee_id,
	salary,
	salary_exception	

FROM Proj_Person where type = 'Employee' ;

create or replace TRIGGER Proj_Employee_trigger
	 INSTEAD OF insert ON Proj_Employee_view
	 FOR EACH ROW
BEGIN
	insert into Proj_Person (
	person_id,
	type,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	Proj_Person_person_id,
	Proj_Person_person_id2,
	employee_id,
	salary,
	salary_exception)
	 VALUES (
	:NEW.person_id,
	'Employee',
	:NEW.first_name,
	:NEW.last_name,
	:NEW.home_address,
	:NEW.zipcode,
	:NEW.home_phone,
	:NEW.us_citizen,
	:NEW.Proj_Person_person_id,
	:NEW.Proj_Person_person_id2,
	:NEW.employee_id,
	:NEW.salary,
	:NEW.salary_exception) ;
END;
/

create view Proj_Project_Employee_view as
SELECT
	person_id,
	type,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	Proj_Person_person_id,
	Proj_Person_person_id2,
	employee_id,
	salary,
	salary_exception	
FROM Proj_Person where type = 'Project Employee' ;

create or replace TRIGGER Proj_Project_Employee_trigger
	 INSTEAD OF insert ON Proj_Project_Employee_view
	 FOR EACH ROW
BEGIN
	insert into Proj_Person (
	person_id,
	type,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	Proj_Person_person_id,
	Proj_Person_person_id2,
	employee_id,
	salary,
	salary_exception)
	 VALUES (
	:NEW.person_id,
	'Project_Employee',
	:NEW.first_name,
	:NEW.last_name,
	:NEW.home_address,
	:NEW.zipcode,
	:NEW.home_phone,
	:NEW.us_citizen,
	:NEW.Proj_Person_person_id,
	:NEW.Proj_Person_person_id2,
	:NEW.employee_id,
	:NEW.salary,
	:NEW.salary_exception) ;
END;
/

create view Proj_Manager_view as
SELECT
	person_id,
	type,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	Proj_Person_person_id,
	Proj_Person_person_id2,
	employee_id,
	salary,
	salary_exception,
	bonus,
	Proj_Dept_dept_no
FROM Proj_Person where type = 'Manager' ;

create or replace TRIGGER Proj_Manager_trigger
	 INSTEAD OF insert ON Proj_Manager_view
	 FOR EACH ROW
BEGIN
	insert into Proj_Person (
	person_id,
	type,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	Proj_Person_person_id,
	Proj_Person_person_id2,
	employee_id,
	salary,
	salary_exception,
	bonus,
	Proj_Dept_dept_no)
	 VALUES (
	:NEW.person_id,
	'Manager',
	:NEW.first_name,
	:NEW.last_name,
	:NEW.home_address,
	:NEW.zipcode,
	:NEW.home_phone,
	:NEW.us_citizen,
	:NEW.Proj_Person_person_id,
	:NEW.Proj_Person_person_id2,
	:NEW.employee_id,
	:NEW.salary,
	:NEW.salary_exception,	
	:NEW.bonus,
	:NEW.Proj_Dept_dept_no) ;
END;
/

create view Proj_Interim_Manager_view as
SELECT
	person_id,
	type,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	Proj_Person_person_id,
	Proj_Person_person_id2,
	employee_id,
	salary,
	salary_exception,
	bonus,
	Proj_Dept_dept_no
FROM Proj_Person where type = 'Interim Manager' ;

create or replace TRIGGER Proj_Interim_Manager_trigger
	 INSTEAD OF insert ON Proj_Interim_Manager_view
	 FOR EACH ROW
BEGIN
	insert into Proj_Person (
	person_id,
	type,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	Proj_Person_person_id,
	Proj_Person_person_id2,
	employee_id,
	salary,
	salary_exception,	
	bonus,
	Proj_Dept_dept_no)
	 VALUES (
	:NEW.person_id,
	'Interim_Manager',
	:NEW.first_name,
	:NEW.last_name,
	:NEW.home_address,
	:NEW.zipcode,
	:NEW.home_phone,
	:NEW.us_citizen,
	:NEW.Proj_Person_person_id,
	:NEW.Proj_Person_person_id2,
	:NEW.employee_id,
	:NEW.salary,
	:NEW.salary_exception,
	:NEW.bonus,
	:NEW.Proj_Dept_dept_no) ;
END;
/

create view Proj_President_view as
SELECT
	person_id,
	type,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	Proj_Person_person_id,
	Proj_Person_person_id2,
	employee_id,
	salary,
	salary_exception,
	bonus,
	Proj_Dept_dept_no
FROM Proj_Person where type = 'President' ;

create or replace TRIGGER Proj_President_trigger
	 INSTEAD OF insert ON Proj_President_view
	 FOR EACH ROW
BEGIN
	insert into Proj_Person (
	person_id,
	type,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	Proj_Person_person_id,
	Proj_Person_person_id2,
	employee_id,
	salary,
	salary_exception,
	bonus,
	Proj_Dept_dept_no)
	 VALUES (
	:NEW.person_id,
	'President',
	:NEW.first_name,
	:NEW.last_name,
	:NEW.home_address,
	:NEW.zipcode,
	:NEW.home_phone,
	:NEW.us_citizen,
	:NEW.Proj_Person_person_id,
	:NEW.Proj_Person_person_id2,
	:NEW.employee_id,
	:NEW.salary,
	:NEW.salary_exception,
	:NEW.bonus,
	:NEW.Proj_Dept_dept_no) ;
END;
/

create view Proj_Current_Project_view as
SELECT
	project_no,
	type,
	project_title,
	project_active,
	Proj_Person_person_id,
	Proj_Project_project_no,
	Proj_Dept_dept_no
FROM Proj_Project where type = 'Current Project' ;

create or replace TRIGGER Proj_Current_Project_trigger
	 INSTEAD OF insert ON Proj_Current_Project_view
	 FOR EACH ROW
BEGIN
	insert into Proj_Project (
	project_no,
	type,
	project_title,
	project_active,
	Proj_Person_person_id,
	Proj_Project_project_no,
	Proj_Dept_dept_no)
	 VALUES (
	:NEW.project_no,
	'Current Project',
	:NEW.project_title,
	:NEW.project_active,
	:NEW.Proj_Person_person_id,
	:NEW.Proj_Project_project_no,
	:NEW.Proj_Dept_dept_no) ;
END;
/

create view Proj_Previous_Project_view as
SELECT
	project_no,
	type,
	project_title,
	end_date,
	est_person_hours,
	Proj_Person_person_id,
	Proj_Project_project_no,
	Proj_Dept_dept_no
FROM Proj_Project where type = 'Previous Project' ;

create or replace TRIGGER Proj_Previous_Project_trigger
	 INSTEAD OF insert ON Proj_Previous_Project_view
	 FOR EACH ROW
BEGIN
	insert into Proj_Project (
	project_no,
	type,
	project_title,
	end_date,
	est_person_hours,
	Proj_Person_person_id,
	Proj_Project_project_no,
	Proj_Dept_dept_no)
	 VALUES (
	:NEW.project_no,
	'Previous Project',
	:NEW.project_title,
	:NEW.end_date,
	:NEW.est_person_hours,
	:NEW.Proj_Person_person_id,
	:NEW.Proj_Project_project_no,
	:NEW.Proj_Dept_dept_no) ;
END;
/